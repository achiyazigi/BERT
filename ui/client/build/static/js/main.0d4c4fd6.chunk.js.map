{"version":3,"sources":["components/Results.jsx","components/MyCheckbox.jsx","components/SentenceCompletionForm.jsx","App.js","index.js"],"names":["Results","json","Table","striped","bordered","hover","variant","Object","values","map","index","w","p","MyCheckbox","setOriginal","original","className","style","border","type","id","onClick","SentenceCompletionForm","lang","example","useState","sentence","setSentence","split","mask","setMask","default","result","setResult","answered","setAnswered","label_for_mask","InputGroup","Text","color","label_for_sentence","post","a","console","log","fetch","method","headers","Accept","body","JSON","stringify","text","res","as_json","content","response","parse","title","name","display","Form","target","onSubmit","Group","Control","value","onChange","e","s","ssplit","indexOf","resindex","length","Select","width","currentTarget","defaultValue","word","disabled","Button","marginBottom","Spinner","animation","margin","App","Container","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d4c4fd6.chunk.js","sourcesContent":["import { Table } from \"react-bootstrap\";\n\nfunction Results({ json }) {\n  return (\n    <Table striped bordered hover variant=\"dark\">\n      <thead>\n        <tr key=\"head\">\n          <th>#</th>\n          <th>word</th>\n          <th>probability</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.values(json).map(([w, p], index) => (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{w}</td>\n            <td>{p}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default Results;\n","import \"./MyCheckbox.css\";\nconst MyCheckbox = ({ setOriginal, original }) => {\n  return (\n    <article\n      className=\"feature2\"\n      style={{ border: original ? \"none\" : \"solid\" }}\n    >\n      <input\n        type=\"checkbox\"\n        id=\"feature2\"\n        onClick={() => setOriginal(!original)}\n      />\n      <div>\n        <span className=\"content\">\n          Use Original\n          <br />\n          Model\n        </span>\n      </div>\n    </article>\n  );\n};\n\nexport default MyCheckbox;\n","import { useState, useEffect } from \"react\";\nimport { Button, Form, InputGroup, Spinner } from \"react-bootstrap\";\nimport Results from \"./Results\";\nimport MyCheckbox from \"./MyCheckbox\";\nimport \"./SentenceCompletionForm.css\";\nfunction SentenceCompletionForm({ lang }) {\n  const example =\n    lang === \"heb\"\n      ? \"משפט לדוגמא לצורך עבודה\"\n      : \"An Example sentence to work with\";\n  const [sentence, setSentence] = useState(example);\n  const [mask, setMask] = useState(sentence.split(\" \")[0]);\n  const [result, setResult] = useState({ default: \"\" });\n  const [answered, setAnswered] = useState(true);\n  const [original, setOriginal] = useState(false);\n\n  const label_for_mask = (\n    <InputGroup.Text className=\"bg-dark\" style={{ color: \"darkgray\" }}>\n      {lang === \"en\" ? \"MASK word:\" : \":מילת מיסוך\"}\n    </InputGroup.Text>\n  );\n  const label_for_sentence = (\n    <InputGroup.Text className=\"bg-dark\" style={{ color: \"darkgray\" }}>\n      {lang === \"en\" ? \"Sentence:\" : \":משפט\"}\n    </InputGroup.Text>\n  );\n\n  const post = async (lang) => {\n    console.log(\"before fetch\");\n    setAnswered(false);\n    const res = await fetch(\"/\" + lang, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text: sentence,\n        mask: mask,\n        original: original,\n      }),\n    });\n    console.log(\"after fetch\");\n    setAnswered(true);\n\n    const as_json = await res.json();\n    const content = as_json.response;\n    setResult(JSON.parse(content));\n  };\n  return (\n    <div className=\"App\">\n      <iframe\n        title=\"dummy\"\n        name=\"dummyframe\"\n        id=\"dummyframe\"\n        style={{ display: \"none\" }}\n      ></iframe>\n      <Form\n        target=\"dummyframe\"\n        id=\"sentence-completion-form\"\n        onSubmit={() => post(lang)}\n      >\n        <Form.Group className=\"mb-3\">\n          <InputGroup className=\"mb-3\">\n            {lang === \"en\" ? label_for_sentence : null}\n\n            <Form.Control\n              className=\"Main-text-input bg-dark\"\n              type=\"text\"\n              name=\"textbox\"\n              value={sentence}\n              onChange={(e) => {\n                const s = e.target.value;\n                const ssplit = s.split(\" \");\n                const index = sentence.split(\" \").indexOf(mask);\n                const resindex = index >= ssplit.length ? 0 : index;\n                setSentence(s);\n                setMask(ssplit[resindex]);\n              }}\n              style={{ color: \"white\" }}\n            />\n            {lang === \"heb\" ? label_for_sentence : null}\n          </InputGroup>\n          <br />\n          <InputGroup className=\"mb-3\">\n            {lang === \"en\" ? label_for_mask : null}\n            <Form.Select\n              className=\"bg-dark\"\n              style={{ width: \"auto\", display: \"inline-block\", color: \"white\" }}\n              id=\"masks\"\n              name=\"masklist\"\n              onChange={(e) => {\n                setMask(e.currentTarget.value);\n              }}\n              defaultValue={sentence.split(\" \")[0]}\n            >\n              {sentence.split(\" \").map((word, index) => (\n                <option key={index} value={word}>\n                  {word}\n                </option>\n              ))}\n            </Form.Select>\n\n            {lang === \"heb\" ? label_for_mask : null}\n          </InputGroup>\n          <fieldset disabled={!answered} style={{ display: \"inline-block\" }}>\n            {lang === \"heb\" ? (\n              <MyCheckbox\n                setOriginal={setOriginal}\n                original={original}\n              ></MyCheckbox>\n            ) : null}\n            <Button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              value={lang === \"heb\" ? \"אישור\" : \"Submit\"}\n              style={{ marginBottom: \"30px\" }}\n            >\n              {lang === \"heb\" ? \"אישור\" : \"Submit\"}\n            </Button>\n            {answered ? (\n              <br />\n            ) : (\n              <Spinner\n                animation=\"border\"\n                variant=\"primary\"\n                style={{ margin: \"10px\" }}\n              />\n            )}\n          </fieldset>\n\n          <Results json={result} />\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default SentenceCompletionForm;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import \"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\";\n//import 'https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css';\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport SentenceCompletionForm from './components/SentenceCompletionForm';\nfunction App() {\n  \n\n  return (\n    <div className=\"App bg-dark\">\n      <header className=\"App-header\">\n        Welcome to our app!\n      </header>\n      <Container>\n        <Row>\n          <Col>\n            <h1 style={{color: 'darkgray'}}>Sentence Completion</h1>\n          </Col>\n          <Col>\n            <h1 style={{color: 'darkgray'}}>השלמת משפט</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <SentenceCompletionForm lang='en'/>\n          </Col>\n          <Col>\n            <SentenceCompletionForm lang='heb'/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}